{"version":3,"sources":["componentBlocks/themePalette.js","componentBlocks/StyledTodo/Main.js","componentBlocks/StyledTodo/Header.js","componentBlocks/StyledTodo/TodoInput.js","library/icons.js","componentBlocks/StyledTodo/TodoItem.js","componentBlocks/StyledTodo/FoldableList/FoldBtn.js","componentBlocks/StyledTodo/FoldableList/FoldUl.js","componentBlocks/StyledTodo/FoldableList/TodoList.js","componentBlocks/StyledTodo.js","library/network.js","App.js","serviceWorker.js","index.js"],"names":["theme","color","highlight","highlightReverse","background","boxShadow","alert","StyledMain","styled","main","_templateObject","StyledTodoHeader","_ref","className","children","react_default","a","createElement","Header_templateObject","TodoInput","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleInputChange","bind","assertThisInitialized","handleInputSubmit","state","value","wrongInput","placeholder","evt","defaultSetup","setState","objectSpread","target","preventDefault","onSubmit","_StyledInput","type","onChange","_css","React","Component","StyledTodoInput","withConfig","displayName","componentId","DeleteIcon","width","height","viewBox","d","icons_templateObject","StyledTodoItem","todoTitle","onClick","TodoItem_templateObject","FoldBtn","folded","FoldBtn_templateObject","FoldUl","FoldUl_templateObject","FoldableList","toggleFold","prevProps","todoData","render","_this$props","onDelClick","ItemTemplate","FoldableList_FoldBtn","FoldableList_FoldUl","map","item","key","localId","title","StyledTodo","Main","Header","StyledHeader","Input","Item","TodoList_templateObject","asyncGetJson","_x","_asyncGetJson","apply","arguments","_callee","apiURI","init","data","json","regenerator_default","wrap","_context","prev","next","method","mode","fetch","sent","abrupt","stop","App","deleteTodoItem","addTodoItem","getTodoData","assignID","todoItem","idx","assign","concat","Date","valueOf","todoJson","todoDataWithID","itemID","_this2","filter","todo","newTodoItem","Math","floor","random","status","newTodoData","toConsumableArray","inputVal","componentBlocks_StyledTodo","Boolean","window","location","hostname","match","ReactDOM","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.a1327db7.chunk.js","sourcesContent":["const theme = {\n  color: {\n    highlight: '#0aa',\n    highlightReverse: 'white',\n    background: 'lightcyan',\n    boxShadow: '#888',\n    alert: '#a00',\n  },\n};\n\nexport default theme;\n","import styled from 'styled-components';\nimport theme from '../themePalette';\n\nconst StyledMain = styled.main`\n  display: grid;\n  grid-template-columns: 5% 90% 5%;\n  grid-template-rows: 10% 15% 15% 50% 10%;\n\n  background-color: ${theme.color.background};\n  box-shadow: 24px 24px ${theme.color.boxShadow};\n  position: absolute;\n  left: 50%;\n  transform: translate3d(-50%, 0, 0);\n  top: 10%;\n  width: 64rem;\n  height: 72rem;\n`;\n\nexport default StyledMain;\n","import React from 'react';\nimport styled from 'styled-components';\n\nfunction TodoHeader({ className, children }) {\n  return <header className={className}>{children}</header>;\n}\n\nconst StyledTodoHeader = styled(TodoHeader)`\n  grid-column: 2 / 3;\n  grid-row: 2 / 3;\n  * {\n    margin: 1rem auto;\n  }\n  border-bottom: 1px solid lightgray;\n`;\n\nexport default StyledTodoHeader;\n","import React from 'react';\nimport 'styled-components/macro'; // CSS prop support\nimport styled from 'styled-components';\nimport theme from '../themePalette';\n\nclass TodoInput extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleInputChange = this.handleInputChange.bind(this);\n    this.handleInputSubmit = this.handleInputSubmit.bind(this);\n    this.state = {\n      value: '',\n      wrongInput: false,\n      placeholder: props.placeholder,\n    };\n  }\n\n  handleInputChange(evt) {\n    const defaultSetup = { placeholder: this.props.placeholder, wrongInput: false };\n\n    this.setState({ value: evt.target.value, ...defaultSetup });\n  }\n\n  handleInputSubmit(evt) {\n    evt.preventDefault();\n    const { value } = this.state;\n\n    // Alert user on form submit without input\n    if (value === '') {\n      this.setState({ placeholder: \"Sorry, we can't create empty todo\", wrongInput: true });\n      return;\n    }\n    const { onSubmit } = this.props;\n    onSubmit(value);\n\n    this.setState({ value: '' });\n  }\n\n  render() {\n    const { className } = this.props;\n    return (\n      <form className={className} onSubmit={this.handleInputSubmit}>\n        <input\n          css={this.state.wrongInput ? 'box-shadow: 0px 0px 0px 5px #f66;' : null}\n          placeholder={this.state.placeholder}\n          type=\"text\"\n          onChange={this.handleInputChange}\n          value={this.state.value}\n        />\n        <input type=\"submit\" value=\"Add Item\" />\n      </form>\n    );\n  }\n}\n\nconst StyledTodoInput = styled(TodoInput)`\n  display: grid;\n  grid-template-columns: auto 20%;\n  grid-template-rows: 10% auto 10%;\n  column-gap: 1rem;\n\n  input[type='text'] {\n    grid-column: 1;\n    grid-row: 2;\n    font-size: 2rem;\n    padding-left: 2rem;\n    border: 1px solid ${theme.color.highlight};\n    &::placeholder {\n      font-style: italic;\n      color: #bbb;\n    }\n  }\n  input[type='submit'] {\n    grid-column: 2;\n    grid-row: 2;\n    background: unset;\n    background-color: ${theme.color.highlight};\n    border: 1px solid ${theme.color.highlightReverse};\n    font-size: 2rem;\n    color: white;\n    transition: all 0.2s;\n\n    &:hover,\n    &:active {\n      background-color: black;\n    }\n  }\n\n  grid-column: 2 / 3;\n  grid-row: 3 / 4;\n`;\n\nexport default StyledTodoInput;\n","import React from 'react';\nimport styled from 'styled-components';\n\nexport const DeleteIcon = styled(props => (\n  <svg\n    className={props.className}\n    width={props.width}\n    height={props.height}\n    viewBox={props.viewBox}\n  >\n    <path d=\"M 10,10 L 30,30 M 30,10 L 10,30\" />\n  </svg>\n))`\n  stroke: red;\n  fill: transparent;\n  stroke-linecap: round;\n  stroke-width: 0.5rem;\n`;\n\nexport default { DeleteIcon };\n","import React from 'react';\nimport styled from 'styled-components';\nimport { DeleteIcon } from '../../library/icons';\n\nfunction TodoItem({ todoTitle, className, onClick }) {\n  return (\n    <li className={className}>\n      <span>{todoTitle}</span>\n      <button onClick={onClick} type=\"button\">\n        <DeleteIcon height=\"20\" width=\"20\" viewBox=\"5 5 30 30\" />\n      </button>\n    </li>\n  );\n}\n\nconst StyledTodoItem = styled(TodoItem)`\n  display: grid;\n  grid-template-columns: 85% 15%;\n  grid-template-rows: 10% 80% 10%;\n  padding: 1rem;\n  margin: 0 auto;\n  margin-bottom: 1rem;\n  background-color: white;\n\n  span {\n    grid-column: 1;\n    grid-row: 2;\n  }\n  button {\n    grid-column: 2;\n    grid-row: 2;\n    color: red;\n    border: none;\n    background: none;\n    font-size: 2rem;\n    line-height: 100%;\n    border-radius: 50px;\n    transition: all 0.2s;\n\n    &:hover,\n    &:active {\n      background-color: red;\n      color: white;\n\n      svg {\n        stroke: white;\n      }\n    }\n  }\n`;\n\nexport default StyledTodoItem;\n","import React from 'react';\nimport styled from 'styled-components';\nimport theme from '../../themePalette';\n\nconst FoldBtn = styled(({ className, folded, onClick }) => (\n  <button type=\"button\" className={className} onClick={onClick}>\n    {folded ? 'Unfold' : 'Fold'}\n  </button>\n))`\n  background: ${props => (props.folded ? theme.color.highlight : 'unset')};\n  border: 1px solid ${props => (props.folded ? 'white' : theme.color.highlight)};\n  font-size: 2rem;\n  text-align: center;\n  color: ${props => (props.folded ? 'white' : theme.color.highlight)};\n  transition: all 0.2s;\n\n  &:hover,\n  &:active {\n    background-color: black;\n  }\n`;\n\nexport default FoldBtn;\n","import React from 'react';\nimport styled from 'styled-components';\n\nconst FoldUl = styled(({ className, children }) => <ul className={className}>{children}</ul>)`\n  ${props => (props.folded\n    ? `& > * {\n          height: 0;\n          overflow: hidden;\n          margin: 0;\n          padding: 0;\n        }\n        height: 1rem;\n        overflow: hidden;\n        margin: 0;\n        padding: 0;\n        `\n    : '')}\n`;\n\nexport default FoldUl;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport FoldBtn from './FoldBtn';\nimport FoldUl from './FoldUl';\n\nclass FoldableList extends React.Component {\n  constructor(props) {\n    super(props);\n    this.toggleFold = this.toggleFold.bind(this);\n    this.state = {\n      folded: false,\n    };\n  }\n\n  componentDidUpdate(prevProps) {\n    const { todoData } = this.props;\n\n    if (todoData !== prevProps.todoData) {\n      this.render();\n    }\n  }\n\n  toggleFold() {\n    const { folded } = this.state;\n\n    this.setState({ folded: !folded });\n  }\n\n  render() {\n    const { folded } = this.state;\n    const {\n      todoData, className, onDelClick, ItemTemplate,\n    } = this.props;\n\n    if (!todoData[0]) {\n      return <div className={className}>Loading...</div>;\n    }\n\n    return (\n      <div className={className}>\n        <h2 className=\"listHeader\">Things to Do</h2>\n        <FoldBtn folded={folded} className=\"foldBtn\" onClick={this.toggleFold} />\n        <FoldUl folded={folded} className=\"foldUl\">\n          {todoData.map(item => (\n            <ItemTemplate\n              key={item.localId}\n              todoTitle={item.title}\n              onClick={onDelClick(item.localId)}\n            />\n          ))}\n        </FoldUl>\n      </div>\n    );\n  }\n}\n\nFoldableList.propTypes = {\n  todoData: PropTypes.arrayOf(PropTypes.object).isRequired,\n  className: PropTypes.string.isRequired,\n  onDelClick: PropTypes.func.isRequired,\n  ItemTemplate: PropTypes.oneOfType([\n    PropTypes.shape({ styledComponentId: PropTypes.string }).isRequired, // StyledComponent\n    PropTypes.node,\n  ]).isRequired,\n};\n\nconst StyledTodoList = styled(FoldableList)`\n  display: grid;\n  grid-template-columns: 85% 15%;\n  grid-template-rows: 10% 10% 80%;\n\n  grid-column: 2 / 3;\n  grid-row: 4;\n\n  font-size: 2rem;\n  max-height: 32rem;\n  overflow: hidden;\n\n  .listHeader {\n    grid-column: 1;\n    grid-row: 2;\n  }\n  .foldBtn {\n    grid-column: 2;\n    grid-row: 2;\n  }\n  .foldUl {\n    grid-row: 3;\n    grid-column: 1 / 3;\n\n    margin-top: 1rem;\n    border-bottom: 1px dotted black;\n    width: 103%;\n    overflow-y: scroll;\n  }\n`;\n\nexport default StyledTodoList;\n","import StyledMain from './StyledTodo/Main';\nimport StyledHeader from './StyledTodo/Header';\nimport StyledTodoInput from './StyledTodo/TodoInput';\nimport StyledTodoItem from './StyledTodo/TodoItem';\nimport StyledTodoList from './StyledTodo/FoldableList/TodoList';\n\nconst StyledTodo = {\n  Main: StyledMain,\n  Header: StyledHeader,\n  Input: StyledTodoInput,\n  Item: StyledTodoItem,\n  FoldableList: StyledTodoList,\n};\n\nexport default StyledTodo;\n","export async function asyncGetJson(apiURI) {\n  const init = {\n    method: 'GET',\n    mode: 'cors',\n  };\n\n  const data = await fetch(apiURI, init);\n  const json = await data.json();\n\n  return json;\n}\n\nexport default { asyncGetJson };\n","import React from 'react';\nimport StyledTodo from './componentBlocks/StyledTodo';\nimport { asyncGetJson } from './library/network';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.apiURI = 'http://crong.codesquad.kr:8080/todo';\n    this.deleteTodoItem = this.deleteTodoItem.bind(this);\n    this.addTodoItem = this.addTodoItem.bind(this);\n    this.handleInputSubmit = this.handleInputSubmit.bind(this);\n    this.state = {\n      todoData: [\n        // Default value before fetch completion\n        { localId: 1, title: 'Test Todo', type: 'todo' },\n        { localId: 2, title: 'Hi, there!', type: 'todo' },\n        { localId: 3, title: 'Try Add & Delete!', type: 'todo' },\n        { localId: 4, title: 'And also poke \"Fold\" button on the top-right!', type: 'todo' },\n      ],\n    };\n  }\n\n  componentDidMount() {\n    this.getTodoData();\n  }\n\n  async getTodoData() {\n    const assignID = (todoItem, idx) => Object.assign(todoItem, { localId: `${idx}${new Date().valueOf()}` });\n    const todoJson = await asyncGetJson(this.apiURI);\n    const todoDataWithID = todoJson.map(assignID);\n\n    this.setState({ todoData: todoDataWithID });\n    return todoDataWithID;\n  }\n\n  deleteTodoItem(itemID) {\n    const { todoData } = this.state;\n    return () => this.setState({ todoData: todoData.filter(todo => todo.localId !== itemID) });\n  }\n\n  addTodoItem(todoTitle) {\n    const { todoData } = this.state;\n    const generateID = () => `${Math.floor(Math.random() * 999 + 1)}${new Date().valueOf()}`;\n    const newTodoItem = { localId: `${generateID()}`, title: todoTitle, status: 'todo' };\n\n    const newTodoData = [...todoData.map(todo => Object.assign({}, todo)), newTodoItem];\n\n    this.setState({ todoData: newTodoData });\n  }\n\n  handleInputSubmit(inputVal) {\n    this.addTodoItem(inputVal);\n  }\n\n  render() {\n    const { todoData } = this.state;\n\n    return (\n      <StyledTodo.Main>\n        <StyledTodo.Header>\n          <h1>To-Do List</h1>\n          <p>Every big dish starts with one small bite</p>\n        </StyledTodo.Header>\n        <StyledTodo.Input placeholder=\"Hello, world!\" onSubmit={this.handleInputSubmit} />\n        <StyledTodo.FoldableList\n          ItemTemplate={StyledTodo.Item}\n          todoData={todoData}\n          onDelClick={this.deleteTodoItem}\n        />\n      </StyledTodo.Main>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './style/index.scss';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}