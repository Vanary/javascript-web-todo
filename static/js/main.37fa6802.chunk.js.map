{"version":3,"sources":["componentBlocks/themePalette.js","componentBlocks/Todo/StyledMain.js","components/Todo.js","components/Todo/Header.js","components/Todo/Input.js","components/Todo/Item.js","components/Todo/List.js","componentBlocks/Todo/StyledTodoList.js","componentBlocks/StyledTodo.js","componentBlocks/Todo/StyledHeader.js","componentBlocks/Todo/StyledTodoInput.js","componentBlocks/Todo/StyledTodoItem.js","library/network.js","App.js","serviceWorker.js","index.js"],"names":["theme","color","highlight","highlightReverse","background","boxShadow","alert","StyledMain","styled","main","_templateObject","Todo","Header","_ref","className","children","react_default","a","createElement","Input","TodoInput","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleInputChange","bind","assertThisInitialized","handleInputSubmit","state","value","evt","setState","target","preventDefault","onSubmit","_this$props","placeholder","type","onChange","React","Component","Item","todoTitle","onClick","List","componentDidUpdate","prevProps","todoData","render","onFoldClick","folded","map","item","ItemTemplate","key","id","title","onDelClick","css","StyledTodo","Main","StyledHeader_templateObject","StyledTodoInput_templateObject","StyledTodoItem_templateObject","StyledTodoList_templateObject","_callee","apiURI","init","data","json","regenerator_default","wrap","_context","prev","next","method","mode","fetch","sent","abrupt","stop","_asyncGetJson","App","toggleFold","deleteTodoItem","addTodoItem","TodoList","getTodoData","assignID","todoItem","idx","assign","concat","Date","valueOf","todoJson","todoDataWithID","_this2","itemID","_this3","filter","todo","newTodoItem","Math","floor","random","status","newTodoData","toConsumableArray","inputVal","_this$state","componentBlocks_StyledTodo","Boolean","window","location","hostname","match","ReactDOM","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"sRAUeA,EAVD,CACZC,MAAO,CACLC,UAAW,OACXC,iBAAkB,QAClBC,WAAY,YACZC,UAAW,OACXC,MAAO,8WCHX,IAgBeC,EAhBIC,IAAOC,KAAVC,IAKMV,EAAMC,MAAMG,WACRJ,EAAMC,MAAMI,WCJvB,IAAAM,EAAA,CACbC,OCJa,SAAAC,GAA6C,IAAvBC,EAAuBD,EAAvBC,UAAWC,EAAYF,EAAZE,SAC9C,OAAOC,EAAAC,EAAAC,cAAA,UAAQJ,UAAWA,GAAYC,IDG9BI,kBEHR,SAAAC,EAAYC,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAL,IACjBE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAH,GAAAQ,KAAAH,KAAMJ,KACDA,MAAQA,EACbC,EAAKO,kBAAoBP,EAAKO,kBAAkBC,KAAvBP,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAAD,KACzBA,EAAKU,kBAAoBV,EAAKU,kBAAkBF,KAAvBP,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAAD,KACzBA,EAAKW,MAAQ,CACXC,MAAO,IANQZ,iFAUDa,GAChBV,KAAKW,SAAS,CAAEF,MAAOC,EAAIE,OAAOH,kDAGlBC,GAChBA,EAAIG,iBAEJb,KAAKJ,MAAMkB,SAASd,KAAKQ,MAAMC,OAC/BT,KAAKW,SAAS,CAAEF,MAAO,sCAGhB,IAAAM,EAC4Bf,KAAKJ,MAAhCP,EADD0B,EACC1B,UAAW2B,EADZD,EACYC,YACnB,OACEzB,EAAAC,EAAAC,cAAA,QAAMJ,UAAWA,EAAWyB,SAAUd,KAAKO,mBACzChB,EAAAC,EAAAC,cAAA,SACEuB,YAAaA,EACbC,KAAK,OACLC,SAAUlB,KAAKI,kBACfK,MAAOT,KAAKQ,MAAMC,QAEpBlB,EAAAC,EAAAC,cAAA,SAAOwB,KAAK,SAASR,MAAM,qBAhCIU,IAAMC,WFI5BC,KGJF,SAAAjC,GAAqD,IAAjCkC,EAAiClC,EAAjCkC,UAAWjC,EAAsBD,EAAtBC,UAAWkC,EAAWnC,EAAXmC,QACvD,OACEhC,EAAAC,EAAAC,cAAA,MAAIJ,UAAWA,GACbE,EAAAC,EAAAC,cAAA,YAAO6B,GACP/B,EAAAC,EAAAC,cAAA,UAAQ8B,QAASA,EAASN,KAAK,UAA/B,OHAiBO,KIJR,SAAkB5B,GAC/B,MAAO,CACL6B,mBADK,SACcC,GACb1B,KAAKJ,MAAM+B,WAAaD,EAAUC,UACpC3B,KAAK4B,UAITA,OAPK,WAOI,IAAA/B,EAAAG,KACP,OAAKA,KAAKJ,MAAM+B,SAAS,GASvBpC,EAAAC,EAAAC,cAAA,OAAKJ,UAAWW,KAAKJ,MAAMP,WACzBE,EAAAC,EAAAC,cAAA,0BACAF,EAAAC,EAAAC,cAAA,UAAQwB,KAAK,SAAS5B,UAAU,UAAUkC,QAASvB,KAAKJ,MAAMiC,aAC3D7B,KAAKJ,MAAMkC,OAAS,SAAW,QAElCvC,EAAAC,EAAAC,cAAA,UACGO,KAAKJ,MAAM+B,SAASI,IAAI,SAAAC,GAAI,OAC3BzC,EAAAC,EAAAC,cAACG,EAAMqC,aAAP,CACEC,IAAKF,EAAKG,GACVb,UAAWU,EAAKI,MAChBb,QAAS1B,EAAKD,MAAMyC,WAAWL,EAAKG,UAjB1C5C,EAAAC,EAAAC,cAAA,OAAK6C,IAAI,sBAAsBjD,UAAWW,KAAKJ,MAAMP,WAArD,yxDCTV,ICUekD,EARI,CACjBC,KAAM1D,EACNK,OCLuBJ,YAAOG,EAAKC,OAAZJ,CAAH0D,KDMpB/C,MELsBX,YAAOG,EAAKQ,MAAZX,CAAH2D,IAYInE,EAAMC,MAAMC,UAMbF,EAAMC,MAAMC,UAEXF,EAAMC,MAAME,kBFdnC2C,KGPqBtC,YAAOG,EAAKmC,KAAZtC,CAAH4D,KHQlBnB,KDPqBzC,YAAOG,EAAKsC,KAAZzC,CAAH6D,IAiBF,SAAAhD,GAAK,OAAKA,EAAMkC,OAASvD,EAAMC,MAAMC,UAAY,SAC3C,SAAAmB,GAAK,OAAKA,EAAMkC,OAAS,QAAUvD,EAAMC,MAAMC,WAG1D,SAAAmB,GAAK,OAAKA,EAAMkC,OAAS,QAAUvD,EAAMC,MAAMC,WAQtD,SAAAmB,GAAK,OAAKA,EAAMkC,OAAN,uNAYV,iDK7CN,SAAAe,EAA6BC,GAA7B,IAAAC,EAAAC,EAAAC,EAAA,OAAAC,EAAA1D,EAAA2D,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cACQP,EAAO,CACXQ,OAAQ,MACRC,KAAM,QAHVJ,EAAAE,KAAA,EAMqBG,MAAMX,EAAQC,GANnC,cAMQC,EANRI,EAAAM,KAAAN,EAAAE,KAAA,EAOqBN,EAAKC,OAP1B,cAOQA,EAPRG,EAAAM,KAAAN,EAAAO,OAAA,SASSV,GATT,wBAAAG,EAAAQ,SAAAf,EAAA7C,gCAYe6D,kDCgEAC,cAvEb,SAAAA,EAAYlE,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAA8D,IACjBjE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAgE,GAAA3D,KAAAH,KAAMJ,KACDkD,OAAS,sCACdjD,EAAKkE,WAAalE,EAAKkE,WAAW1D,KAAhBP,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAAD,KAClBA,EAAKmE,eAAiBnE,EAAKmE,eAAe3D,KAApBP,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAAD,KACtBA,EAAKoE,YAAcpE,EAAKoE,YAAY5D,KAAjBP,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAAD,KACnBA,EAAKU,kBAAoBV,EAAKU,kBAAkBF,KAAvBP,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAAD,KACzBA,EAAKW,MAAQ,CACXsB,OAAQ,CACNoC,UAAU,GAEZvC,SAAU,IAXK9B,mFAgBjBG,KAAKmE,6KAICC,EAAW,SAACC,EAAUC,GAAX,OAAmBxE,OAAOyE,OAAOF,EAAU,CAAElC,GAAE,GAAAqC,OAAKF,GAALE,QAAW,IAAIC,MAAOC,uBAC/Db,EAAc7D,KAAK8C,sBAApC6B,SACAC,EAAiBD,EAAS5C,IAAIqC,GAEpCpE,KAAKW,SAAS,CAAEgB,SAAUiD,sBACnBA,wIAGEhE,GAAQ,IAAAiE,EAAA7E,KACjB,OAAO,kBAAM6E,EAAKlE,SAAS,CAAEmB,OAAQ,CAAEoC,UAAWW,EAAKrE,MAAMsB,OAAOlB,8CAGvDkE,GAAQ,IAAAC,EAAA/E,KACrB,OAAO,kBAAM+E,EAAKpE,SAAS,CAAEgB,SAAUoD,EAAKvE,MAAMmB,SAASqD,OAAO,SAAAC,GAAI,OAAIA,EAAK9C,KAAO2C,2CAG5ExD,GACV,IACM4D,EAAc,CAAE/C,GAAE,GAAAqC,OADL,GAAAA,OAASW,KAAKC,MAAsB,IAAhBD,KAAKE,SAAiB,IAA1Cb,QAA+C,IAAIC,MAAOC,YAChCtC,MAAOd,EAAWgE,OAAQ,QAEjEC,EAAW,GAAAf,OAAA1E,OAAA0F,EAAA,EAAA1F,CAAOE,KAAKQ,MAAMmB,SAASI,IAAI,SAAAkD,GAAI,OAAInF,OAAOyE,OAAO,GAAIU,MAAzD,CAAiEC,IAElFlF,KAAKW,SAAS,CAAEgB,SAAU4D,8CAGVE,GAChBzF,KAAKiE,YAAYwB,oCAGV,IAAAC,EACsB1F,KAAKQ,MAA1BsB,EADD4D,EACC5D,OAAQH,EADT+D,EACS/D,SAEhB,OACEpC,EAAAC,EAAAC,cAACkG,EAAWnD,KAAZ,KACEjD,EAAAC,EAAAC,cAACkG,EAAWxG,OAAZ,KACEI,EAAAC,EAAAC,cAAA,wBACAF,EAAAC,EAAAC,cAAA,uDAEFF,EAAAC,EAAAC,cAACkG,EAAWjG,MAAZ,CAAkBsB,YAAY,gBAAgBF,SAAUd,KAAKO,oBAC7DhB,EAAAC,EAAAC,cAACkG,EAAWnE,KAAZ,CACES,aAAcM,EAAWlB,KACzBS,OAAQA,EAAOoC,SACfvC,SAAUA,EACVE,YAAa7B,KAAK+D,WAAW,YAC7B1B,WAAYrC,KAAKgE,yBAjET7C,IAAMC,iBCQJwE,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASrE,OAAOrC,EAAAC,EAAAC,cAACyG,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.37fa6802.chunk.js","sourcesContent":["const theme = {\n  color: {\n    highlight: '#0aa',\n    highlightReverse: 'white',\n    background: 'lightcyan',\n    boxShadow: '#888',\n    alert: '#a00',\n  },\n};\n\nexport default theme;\n","import styled from 'styled-components';\nimport theme from '../themePalette';\n\nconst StyledMain = styled.main`\n  display: grid;\n  grid-template-columns: 5% auto 5%;\n  grid-template-rows: 10% 15% 15% auto 10%;\n\n  background-color: ${theme.color.background};\n  box-shadow: 24px 24px ${theme.color.boxShadow};\n  position: absolute;\n  left: 20%;\n  top: 10%;\n  width: 60vw;\n  height: 80vh;\n  min-height: 64rem;\n  max-height: 80rem;\n`;\n\nexport default StyledMain;\n","import Header from './Todo/Header';\nimport Input from './Todo/Input';\nimport Item from './Todo/Item';\nimport List from './Todo/List';\n\nexport default {\n  Header, Input, Item, List,\n};\n","import React from 'react';\n\nexport default function TodoHeader({ className, children }) {\n  return <header className={className}>{children}</header>;\n}\n","import React from 'react';\n\nexport default class TodoInput extends React.Component {\n  constructor(props) {\n    super(props);\n    this.props = props;\n    this.handleInputChange = this.handleInputChange.bind(this);\n    this.handleInputSubmit = this.handleInputSubmit.bind(this);\n    this.state = {\n      value: '',\n    };\n  }\n\n  handleInputChange(evt) {\n    this.setState({ value: evt.target.value });\n  }\n\n  handleInputSubmit(evt) {\n    evt.preventDefault();\n\n    this.props.onSubmit(this.state.value);\n    this.setState({ value: '' });\n  }\n\n  render() {\n    const { className, placeholder } = this.props;\n    return (\n      <form className={className} onSubmit={this.handleInputSubmit}>\n        <input\n          placeholder={placeholder}\n          type=\"text\"\n          onChange={this.handleInputChange}\n          value={this.state.value}\n        />\n        <input type=\"submit\" value=\"Add Item\" />\n      </form>\n    );\n  }\n}\n","import React from 'react';\n\nexport default function TodoItem({ todoTitle, className, onClick }) {\n  return (\n    <li className={className}>\n      <span>{todoTitle}</span>\n      <button onClick={onClick} type=\"button\">\n        X\n      </button>\n    </li>\n  );\n}\n","import React from 'react';\n\nexport default function TodoList(props) {\n  return {\n    componentDidUpdate(prevProps) {\n      if (this.props.todoData !== prevProps.todoData) {\n        this.render();\n      }\n    },\n\n    render() {\n      if (!this.props.todoData[0]) {\n        return (\n          <div css=\"place-self: center;\" className={this.props.className}>\n            Loading...\n          </div>\n        );\n      }\n\n      return (\n        <div className={this.props.className}>\n          <h2>Things to Do</h2>\n          <button type=\"button\" className=\"foldBtn\" onClick={this.props.onFoldClick}>\n            {this.props.folded ? 'Unfold' : 'Fold'}\n          </button>\n          <ul>\n            {this.props.todoData.map(item => (\n              <props.ItemTemplate\n                key={item.id}\n                todoTitle={item.title}\n                onClick={this.props.onDelClick(item.id)}\n              />\n            ))}\n          </ul>\n        </div>\n      );\n    },\n  };\n}\n","import styled from 'styled-components';\nimport Todo from '../../components/Todo';\nimport theme from '../themePalette';\n\nconst StyledTodoList = styled(Todo.List)`\n  border-bottom: 1px solid lightgray;\n  display: grid;\n  grid-template-columns: 90% 10%;\n  grid-template-rows: 10% 10% auto;\n\n  grid-column: 2 / 3;\n  grid-row: 4;\n  font-size: 2rem;\n\n  h2 {\n    grid-column: 1;\n    grid-row: 2;\n  }\n  .foldBtn {\n    grid-column: 2;\n    grid-row: 2;\n    background: ${props => (props.folded ? theme.color.highlight : 'unset')};\n    border: 1px solid ${props => (props.folded ? 'white' : theme.color.highlight)};\n    font-size: 2rem;\n    text-align: center;\n    color: ${props => (props.folded ? 'white' : theme.color.highlight)};\n  }\n  ul {\n    grid-row: 3;\n    grid-column: 1 / 3;\n\n    border-bottom: 1px dotted black;\n\n    ${props => (props.folded\n    ? `li {\n          height: 0;\n          overflow: hidden;\n          margin: 0;\n          padding: 0;\n        }\n        height: 1rem;\n        overflow: hidden;\n        margin: 0;\n        padding: 0;\n        `\n    : '')}\n  }\n`;\n\nexport default StyledTodoList;\n","import StyledMain from './Todo/StyledMain';\nimport StyledHeader from './Todo/StyledHeader';\nimport StyledTodoInput from './Todo/StyledTodoInput';\nimport StyledTodoItem from './Todo/StyledTodoItem';\nimport StyledTodoList from './Todo/StyledTodoList';\n\nconst StyledTodo = {\n  Main: StyledMain,\n  Header: StyledHeader,\n  Input: StyledTodoInput,\n  Item: StyledTodoItem,\n  List: StyledTodoList,\n};\n\nexport default StyledTodo;\n","import styled from 'styled-components';\nimport Todo from '../../components/Todo';\n\nconst StyledTodoHeader = styled(Todo.Header)`\n  grid-column: 2 / 3;\n  grid-row: 2 / 3;\n  * {\n    margin: 1rem auto;\n  }\n  border-bottom: 1px solid lightgray;\n`;\n\nexport default StyledTodoHeader;\n","import styled from 'styled-components';\nimport Todo from '../../components/Todo';\nimport theme from '../themePalette';\n\nconst StyledTodoInput = styled(Todo.Input)`\n  display: grid;\n  grid-template-columns: auto 20%;\n  grid-template-rows: 10% auto 10%;\n  column-gap: 1rem;\n\n  input {\n    grid-column: 1;\n    grid-row: 2;\n    font-size: 2rem;\n    padding-left: 2rem;\n    border: unset;\n    outline: 1px solid ${theme.color.highlight};\n  }\n  input[type='submit'] {\n    grid-column: 2;\n    grid-row: 2;\n    background: unset;\n    background-color: ${theme.color.highlight};\n    border: unset;\n    outline: 1px solid ${theme.color.highlightReverse};\n    font-size: 2rem;\n    color: white;\n  }\n\n  grid-column: 2 / 3;\n  grid-row: 3 / 4;\n`;\n\nexport default StyledTodoInput;\n","import styled from 'styled-components';\nimport Todo from '../../components/Todo';\n\nconst StyledTodoItem = styled(Todo.Item)`\n  display: grid;\n  grid-template-columns: auto 10%;\n  grid-template-rows: 10% auto 10%;\n  padding: 1rem;\n  margin: 1rem auto;\n  background-color: white;\n\n  span {\n    grid-column: 1;\n    grid-row: 2;\n  }\n  button {\n    grid-column: 2;\n    grid-row: 2;\n    color: red;\n    border: none;\n    background: none;\n    font-size: 2rem;\n  }\n`;\n\nexport default StyledTodoItem;\n","async function _asyncGetJson(apiURI) {\n  const init = {\n    method: 'GET',\n    mode: 'cors',\n  };\n\n  const data = await fetch(apiURI, init);\n  const json = await data.json();\n\n  return json;\n}\n\nexport default _asyncGetJson;\n","import React from 'react';\nimport StyledTodo from './componentBlocks/StyledTodo';\nimport _asyncGetJson from './library/network';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.apiURI = 'http://crong.codesquad.kr:8080/todo';\n    this.toggleFold = this.toggleFold.bind(this);\n    this.deleteTodoItem = this.deleteTodoItem.bind(this);\n    this.addTodoItem = this.addTodoItem.bind(this);\n    this.handleInputSubmit = this.handleInputSubmit.bind(this);\n    this.state = {\n      folded: {\n        TodoList: false,\n      },\n      todoData: [],\n    };\n  }\n\n  componentDidMount() {\n    this.getTodoData();\n  }\n\n  async getTodoData() {\n    const assignID = (todoItem, idx) => Object.assign(todoItem, { id: `${idx}${new Date().valueOf()}` });\n    const todoJson = await _asyncGetJson(this.apiURI);\n    const todoDataWithID = todoJson.map(assignID);\n\n    this.setState({ todoData: todoDataWithID });\n    return todoDataWithID;\n  }\n\n  toggleFold(target) {\n    return () => this.setState({ folded: { TodoList: !this.state.folded[target] } });\n  }\n\n  deleteTodoItem(itemID) {\n    return () => this.setState({ todoData: this.state.todoData.filter(todo => todo.id !== itemID) });\n  }\n\n  addTodoItem(todoTitle) {\n    const generateID = () => `${Math.floor(Math.random() * 999 + 1)}${new Date().valueOf()}`;\n    const newTodoItem = { id: `${generateID()}`, title: todoTitle, status: 'todo' };\n\n    const newTodoData = [...this.state.todoData.map(todo => Object.assign({}, todo)), newTodoItem];\n\n    this.setState({ todoData: newTodoData });\n  }\n\n  handleInputSubmit(inputVal) {\n    this.addTodoItem(inputVal);\n  }\n\n  render() {\n    const { folded, todoData } = this.state;\n\n    return (\n      <StyledTodo.Main>\n        <StyledTodo.Header>\n          <h1>To-Do List</h1>\n          <p>Every big dish starts with one small bite</p>\n        </StyledTodo.Header>\n        <StyledTodo.Input placeholder=\"Hello, world!\" onSubmit={this.handleInputSubmit} />\n        <StyledTodo.List\n          ItemTemplate={StyledTodo.Item}\n          folded={folded.TodoList}\n          todoData={todoData}\n          onFoldClick={this.toggleFold('TodoList')}\n          onDelClick={this.deleteTodoItem}\n        />\n      </StyledTodo.Main>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './style/index.scss';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}